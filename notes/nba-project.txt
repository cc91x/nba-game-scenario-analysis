NBA Project Notes 

TODOs:
    - copy over some (all?) mongodb data 
        - or run for all dates 
    - rename mongo db fields 
        - do camelcase
    - setup airflow for all these jobs 
        - set the go files to be independent? and runnable by apache airflow? 
    - clean up all go files 
    - clean up analysis script 

I think I should rewrite a bunch of what I've already done - I can organize this to be a small scale data pipeline  
Can try setting up a "scheduler" or "workflow management" tool or something, Apache airflow. A procmon equivalent 
    - Except obviously not using cloud

Should be a few sections:
    1
    - NBA Game Data extraction - DONE
        - Should be done in python, using the existing public API project I found - don't need to add that in this project 
        - Persist this to Mongo DB, raw data store 
    2
    - NBA Odds lookup 
        - should be done using the Odds API, should rewrite this in Go
        - Persist this raw data into Mongo DB 
    3
    - NBA Game Clean 
        - Clean the raw game data with improved play by play logic use go
    4
    - NBA Odds Clean 
        - Clean the odds, again in Go
    5
    - Game data + odds combination 
        - This can be written in Go, after the above two are complete, should lookup the raw data and raw odds and combine them into a singular object 
        - Probably make this one a CSV, so Go can combine them into a CSV
    6
    - Back to python for data analysis
        - Write script in Go to query the stored data with live, in game parameters and produce results

6 steps to the program ... Oi!, can reference the python scripts for now 
    
for the Go code, make sure to close the mongo connection openings


- Quickstart guide used: https://airflow.apache.org/docs/apache-airflow/stable/start.html
pip3 install "apache-airflow==2.10.0" --constraint "https://raw.githubusercontent.com/apache/airflow/constraints-2.10.0/constraints-3.11air.txt"

https://raw.githubusercontent.com/apache/airflow/constraints-2.10.0/constraints-3.11.4.txt"

airflow standalone
    -> run from vs code terminal

the 'airflow' folder is located a Users ericwhitehead airflow - just search airflow in finder
    - where are these DAGS appearing in my local coming from?!?!?!
    chatgpt suggests <your-python-env>/lib/python3.x/site-packages/airflow/example_dags/
    - Yes, if I go in terminal and navigate here, I can see these all. Annoyling I cant do this in Finder bc Finder is so bad. 
    So I should probably start a new project, or do something other than airflow standalone  

/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/airflow/example_dags
-> so the Library in finder I access is really the ~Library and not the /Library 

Can open in VS code with Open Folder > Macintosh HD > Library > Frameworks, ... 
    - Set "searching in" to "Macintosh HD" or maybe This Mac...

11-13 to build and run:
from /go: go build -o ../bin/nba_main_two go/. 
from /go: ../bin/nba_main --process=combine_game_and_odds --date=2024-10-27 --config=go_config.yaml

See if airflow works from this directory ... 
-> sample dag not showing up 
-> see if this is something that can be configured 

Hmm, even with the airflow config as similar as I think it can be to airflow_local, still not working 
try some more things tn

airflow setup here - 
export AIRFLOW_HOME=/Users/ericwhitehead/Desktop/clag/nba-project-post-mv/airflow
airflow users create --username admin --firstname test --lastname admin --role Admin --email test@test.com
airflow db init

then run scheduler and start webserver

